service: project

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: python3.8
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: todos/create.createRun
    events:
      - http:
          path: todos
          method: post
          cors: true

  list:
    handler: todos/list.getAllRuns
    events:
      - http:
          path: todos
          method: get
          cors: true

  get:
    handler: todos/get.getRun
    events:
      - http:
          path: todos/{id}/{run}
          method: get
          cors: true
  getId:
    handler: todos/getId.getIdRuns
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true

  update:
    handler: todos/update.updateRun
    events:
      - http:
          path: todos/{id}/{run}
          method: put
          cors: true

  delete:
    handler: todos/delete.deleteRun
    events:
      - http:
          path: todos/{id}/{run}
          method: delete
          cors: true
resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: run
            AttributeType: S

        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: run
            KeyType: RANGE

        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-AllowOrigin: "'*'"
          gatewayresponse.header.Access-Control-AllowHeaders: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-AllowOrigin: "'*'"
          gatewayresponse.header.Access-Control-AllowHeaders: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
